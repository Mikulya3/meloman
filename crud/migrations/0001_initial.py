# Generated by Django 4.2 on 2023-04-15 17:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('title', models.SlugField(max_length=30, primary_key=True, serialize=False, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='crud.category')),
            ],
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField(auto_created=True)),
                ('title', models.CharField(max_length=50)),
                ('descriptions', models.TextField(blank=True, null=True)),
                ('genre', models.CharField(choices=[('comedy', 'Комедия'), ('drama', 'Драма'), ('horror', 'Ужасы')])),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='films', to='crud.category')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='image/')),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='crud.film')),
            ],
        ),
        migrations.AddField(
            model_name='film',
            name='tags',
            field=models.ManyToManyField(to='crud.tag'),
        ),
    ]
